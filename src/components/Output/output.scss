.output-wrapper {
  // overflow: hidden;
  display: flex;
  transition: all 250ms ease;
  width: 100%;
  justify-content: center;
  position: relative;

  .hide-message {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
  }
  .output-lens {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    background-color: rgba(255, 255, 255, 0.35);
    box-shadow: inset 0 0 16px rgba(255, 255, 255, 0.35),
      inset 0 0 128px #ffffff66, inset 0 4px 0px 4px rgba(255, 255, 255, 0.15),
      0 8px 40px 8px rgba(43, 161, 245, 0.25);
    border-radius: 4rem;
    position: relative;
    overflow: hidden;
    padding: 1.5rem;
    backdrop-filter: blur(4px);
    // border: 4px solid rgba(255, 255, 255, 0.25);
    @media (max-width: 768px) {
      padding: 1rem;
    }
    &:before {
      content: "";
      display: grid;
      place-content: center;
      color: white;
      font-size: 1rem;
      font-weight: 500;
      position: absolute;
      top: 0;
      left: 0;
      background: var(--blue);
      width: 100%;
      height: 2rem;
      display: none;
    }
    .output-header {
      font-size: 1.5rem;
      width: 100%;
      display: flex;
      transition: all 250ms ease;
      justify-content: flex-end;
      overflow: hidden;

      .output-basket-length,
      .output-add-basket {
        position: relative;
        border: none;
        font-weight: 500;
        width: 2.5rem;
        aspect-ratio: 1;
        font-size: 1rem;
        display: grid;
        place-content: center;
        border-radius: 50%;
        height: 2.5rem;
        box-shadow: inset 0 0 24px rgba(255, 255, 255, 0.45),
          inset 0 2px 0px 4px rgba(255, 255, 255, 0.35),
          0 8px 40px 8px rgba(43, 161, 245, 0.25);
        // border: 2px solid rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(4px);
        @media (max-width: 768px) {
          width: 1.75rem;
          height: 1.75rem;
          font-size: calc(var(--itemFont) / 2);
        }
        @media (max-width: 500px) {
          width: 1rem;
          height: 1rem;
          font-size: calc(var(--itemFont) / 1.25);
          scale: 0.75 !important;
        }
      }
    }

    .output {
      padding: 0 4rem;
      background-color: white;
      align-items: center;
      height: 80px;
      // border: 1px solid #22222244;
      box-shadow: 0 2px 16px 4px rgba(0, 0, 0, 0.025),
        0 4px 8px rgba(0, 0, 0, 0.005), 0 8px 16px rgba(0, 0, 0, 0.005),
        0 8px 40px 8px rgba(43, 161, 245, 0.15);
      justify-content: center;
      transition: all 250ms ease;

      position: relative;
      overflow: hidden;

      border-radius: 0.5rem;
      border-radius: 100vw;
      // display: none;
      @media (max-width: 768px) {
        max-height: 5rem;
      }
      &:before,
      &:after {
        position: absolute;
        top: 16px;
        font-size: 3rem;
        display: grid;
        place-content: center;
        width: 20px;
        height: calc(100% - 32px);
        box-sizing: border-box;
        opacity: var(--brackets);
        font-family: "Spline Sans Mono";
      }
      &:before {
        content: "[";
        left: 32px;
      }
      &:after {
        content: "]";
        right: 32px;
      }

      .output-item {
        flex: 1;
        height: 100%;
        font-size: var(--itemFont);
        padding: 1rem;
        cursor: pointer;
        margin: 0.5rem 0.5rem;
        display: grid;
        place-content: center;
        transform-origin: center;

        border-radius: 0.25rem;
        overflow: hidden;
        &:hover {
          transform: scale(1.15);
          // background: white;
        }
      }
      .output-clone {
        opacity: 0;
        position: absolute;
      }
    }
  }
}

@keyframes addOutputItem {
  0% {
    opacity: 0;
    flex: 0;
    font-size: 0;
    padding: 0;
    transform: translateX(var(--output-offset));
  }
  50% {
    font-size: 3rem;
  }
  75% {
    font-size: 2.25rem;
  }
  100% {
    opacity: 1;
    flex: 1;
    font-size: 2.5rem;
    transform: translateX(0);
    padding: 1rem;
  }
}

@keyframes outputClone {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 1;
    transform: translateX(var(--clone-offset));
  }
}

@keyframes ascend {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-8rem);
  }
}

.output-undefined {
  font-size: 1.25rem !important;
}
